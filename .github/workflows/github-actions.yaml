name: Build and push Docker image

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: my-datascience-notebook
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  ECR_REGISTRY: 274127640471.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Copy scripts
      run: |
        mkdir -p scripts
        cp convert-to-s3.py scripts/
        cp pipeline.py scripts/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        platforms: linux/amd64
      env:
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}

    - name: Test Docker image
      run: |
        docker run -it ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest python -c "import pandas; print(pandas.__version__)"
        docker run -it ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest python -c "import boto3; print(boto3.__version__)"

    - name: Clean up Docker images
      run: |
        docker image prune -f
